<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.sky.system.mapper.TicketMapper">
    <resultMap id="TicketResult" type="com.sky.system.data.po.Ticket">
        <id column="ticket_id" jdbcType="BIGINT" property="ticketId"/>
        <result column="train_id" jdbcType="VARCHAR" property="trainId"/>
        <result column="start_day" jdbcType="DATE" property="startDay"/>
        <result column="start_station" jdbcType="VARCHAR" property="startStation"/>
        <result column="end_station" jdbcType="VARCHAR" property="endStation"/>
        <result column="start_time" jdbcType="TIMESTAMP" property="startTime"/>
        <result column="end_time" jdbcType="TIMESTAMP" property="endTime"/>
        <result column="ticket_type" jdbcType="VARCHAR" property="ticketType"/>
        <result column="ticket_price" jdbcType="DECIMAL" property="ticketPrice"/>
        <result column="ticket_num" jdbcType="INTEGER" property="ticketNum"/>
    </resultMap>
    <sql id="TicketSql">
        SELECT ticket_id,
               train_id,
               start_day,
               start_station,
               end_station,
               start_time,
               end_time,
               ticket_type,
               ticket_price,
               ticket_num
        FROM ticket
    </sql>

    <select id="selectTicketDirect" resultType="java.lang.String">
        SELECT distinct train_id
        FROM ticket
        WHERE start_station = #{startStation}
          AND end_station = #{endStation}
          AND datediff(start_time, #{day}) = 0
          AND date_sub(start_time, interval 20 minute) > now()
    </select>

    <select id="selectTicketTransfer" resultType="com.sky.system.data.vo.TransferTicket">
        SELECT distinct t1.train_id    firstTrainId,
                        t2.train_id    secondTrainId,
                        t1.end_station secondStartStation,
                        t2.start_day   secondStartDay
        FROM ticket t1,
             ticket t2
        WHERE t1.start_station = #{startStation}
          AND t1.end_station = t2.start_station
          AND t2.end_station = #{endStation}
          AND t1.train_id != t2.train_id
          AND t1.ticket_num > 0
          AND t2.ticket_num > 0
          AND datediff(t1.start_day, #{day}) = 0
          AND date_sub(t1.start_time, interval 20 minute) > now()
          AND t2.start_time > t1.end_time
          AND 1 >= datediff(t2.start_day, t1.start_day)
    </select>

    <select id="selectStationByCity" resultType="java.lang.String">
        SELECT station_name
        FROM city_station_link
        WHERE city_name = #{city}
    </select>

    <select id="selectCityByStation" resultType="java.lang.String">
        SELECT city_name
        FROM city_station_link
        WHERE station_name = #{station}
    </select>

    <select id="selectCity" resultType="java.lang.String">
        SELECT distinct city_name
        FROM city_station_link
        WHERE city_name like #{city}
        LIMIT 10
    </select>

    <insert id="insertCity">
        INSERT INTO city_station_link
        VALUES (#{city}, #{city})
    </insert>

    <select id="selectTicketByConcreteInfo" resultMap="TicketResult">
        <include refid="TicketSql"/>
        WHERE train_id = #{trainId}
          AND datediff(start_time, #{day}) = 0
          AND start_station = #{startStation}
          AND end_station = #{endStation}
    </select>

    <select id="selectTicketByTrainIdAndDay" resultMap="TicketResult">
        <include refid="TicketSql"/>
        WHERE train_id = #{trainId}
          AND start_day = #{day}
    </select>

    <select id="selectByTrainIdAndStationAndTicketType" resultMap="TicketResult">
        <include refid="TicketSql"/>
        WHERE train_id = #{trainId}
          AND start_station = #{startStation}
          AND end_station = #{endStation}
          AND ticket_type = #{ticketType}
          AND start_day = #{day}
    </select>

    <update id="updateTicketNum">
        UPDATE ticket t
        SET ticket_num = (
                SELECT count(*)
                FROM (SELECT * FROM ticket_seat_link link WHERE link.ticket_id = t.ticket_id AND link.sold = 0) a)
        WHERE train_id = #{trainId}
    </update>
    <select id="selectCityOnly" resultType="java.lang.String">
        SELECT distinct city_name
        FROM city_station_link
        WHERE city_name = #{city}
    </select>
</mapper>